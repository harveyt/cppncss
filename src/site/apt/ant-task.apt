  ------
  Ant Task
  ------
  Mathieu Champlon
  ------

CppNcss Task

* Description

 This task integrates CppNcss into an {{{http://ant.apache.org}Apache Ant}} build process.\
 It generates an xml report to a file which in turn can be transformed to an html page with the {{{http://ant.apache.org/manual/CoreTasks/style.html}XSLT}} task.

 In order to use the task it must be defined with a {{{http://ant.apache.org/manual/CoreTasks/taskdef.html}Taskdef}}.

+------------------------------------------------------------------------------+
<taskdef name="cppncss" classname="cppncss.CppNcssTask">
  <classpath>
    <pathelement location="cppncss-1.0.2.jar"/>
    <pathelement location="dom4j-1.6.1.jar"/>
  </classpath>
</taskdef>
+------------------------------------------------------------------------------+

* Parameters

*------------------------------------+---------------------------------------------------------------------------------------------+--------------+
| <<Attribute>>                      | <<Description>>                                                                             | <<Required>> |
*------------------------------------+---------------------------------------------------------------------------------------------+--------------+
| tofile                             | the name of the output file                                                                 | Yes          |
*------------------------------------+---------------------------------------------------------------------------------------------+--------------+
| prefix                             | the prefix to remove from pathes                                                            | No           |
*------------------------------------+---------------------------------------------------------------------------------------------+--------------+
| keepgoing                          | whether the parsing must keep going instead of stopping upon the first error, default to no | No           |
*------------------------------------+---------------------------------------------------------------------------------------------+--------------+
| samples                            | truncate the output after this given number of samples, default to no truncation            | No           |
*------------------------------------+---------------------------------------------------------------------------------------------+--------------+

* Parameters specified as nested elements

 * fileset

   Use filesets to specify the source files to parse.

 * define

   Use defines to suppress define symbols from input while parsing.

  * Parameters

*------------------------------------+------------------------------------------------+--------------+
| <<Attribute>>                      | <<Description>>                                | <<Required>> |
*------------------------------------+------------------------------------------------+--------------+
| name                               | the symbol to replace                          | Yes          |
*------------------------------------+------------------------------------------------+--------------+
| value                              | the value of the replacement, default to empty | No           |
*------------------------------------+------------------------------------------------+--------------+

 * macro

   Use macros to suppress macro expressions from input while parsing.

  * Parameters

*------------------------------------+------------------------------------------------+--------------+
| <<Attribute>>                      | <<Description>>                                | <<Required>> |
*------------------------------------+------------------------------------------------+--------------+
| name                               | the symbol to replace                          | Yes          |
*------------------------------------+------------------------------------------------+--------------+
| value                              | the value of the replacement, default to empty | No           |
*------------------------------------+------------------------------------------------+--------------+

 * sort

   Use sort criteria to control the order of the results in output.

  * Parameters

*------------------------------------+------------------------------------------------+--------------+
| <<Attribute>>                      | <<Description>>                                | <<Required>> |
*------------------------------------+------------------------------------------------+--------------+
| criterion                          | the name of the sort criterion                 | Yes          |
*------------------------------------+------------------------------------------------+--------------+

 Accepted values are: NCSS, CCN and function.

* Examples

+------------------------------------------------------------------------------+
<cppncss tofile="cppncss.xml">
  <fileset dir="src"/>
  <define name="WINAPI"/>
  <macro name="BEGIN_COM_MAP"/>
  <macro name="END_COM_MAP"/>
</cppncss>
+------------------------------------------------------------------------------+
 analyzes all files found recursively under the src directory, with one define and two macro symbols to suppress.

+------------------------------------------------------------------------------+
<cppncss tofile="cppncss.xml" samples="30">
  <fileset dir="src"/>
</cppncss>
+------------------------------------------------------------------------------+
 analyzes all files found recursively under the src directory, reporting only the 30 top measurements.

+------------------------------------------------------------------------------+
<cppncss tofile="cppncss.xml">
  <fileset dir="src"/>
  <sort criterion="function"/>
  <sort criterion="CCN"/>
</cppncss>
+------------------------------------------------------------------------------+
 analyzes all files found recursively under the src directory, sorting the measurements starting with the number of functions, then the CCN value and finally the NCSS value.
